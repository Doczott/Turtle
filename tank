
input = {...}
tankLength = tonumber(input[1])
tankWidth = tonumber(input[2])
tankHeight = tonumber(input[3])
multiTank = tonumber(input[4])
currentSlot = 1

-- edgeslot is the slot for the materials that will be used to construct the corners of the tank. sideslot is the slot
-- for the materials that will be used to construct the sides of the tank. (ie. stone corners with glass sides)
-- All ender chests are in the slot after the indicated mat.

edgeSlot = 1
sideSlot = 5
valveSlot = 9
mSlot = 11
fuelSlot = 7
DOWN = 0
FRONT = 1
FORWARD = 1
UP = 2

-- If an inventory slot runs out of materials, resupply from the ender chest in the next slot.
function checkSlot(cSlot)
  if turtle.getItemCount(cSlot) == 0 then
    dir = openSpace()
    turtle.select(cSlot + 1)
    place(dir)
    turtle.select(cSlot)
    suck(dir)
    turtle.select(cSlot + 1)
    dig(dir)
    turtle.select(cSlot)
  end
end

function openSpace()
  if not detect(DOWN) then
    dir = DOWN
  else
    if not detect(UP) then
      dir = UP
    else
      if not detect(FRONT) then
        dir = FRONT
      else
        turtle.select(mSlot)
        dig(UP)
        dir = UP
      end
    end
  end
  return dir
end

function checkFuel()
  if turtle.getFuelLevel() < 20 then
    checkSlot(fuelSlot)
    turtle.select(fuelSlot)
    turtle.refuel()
  end
end

function go(dir)
  moved = false
  while not moved do
    if move(dir) then
      moved = true
    else
      turtle.select(mSlot)
      dig(dir)
      if checkStorage() and not detect(dir) then
        emptyStorage(dir)
      end
    end
  end
end

function checkStorage()
  full = not (turtle.getItemCount(15) == 0)
  return full
end

function emptyStorage(dir)
  turtle.select(enderSlot)
  place(dir)
  for i = mSlot, 15 do
    turtle.select(i)
    drop(dir)
  end
  turtle.select(enderSlot)
  dig(dir)
end

function placeBlock(mat)
  while detect(DOWN) do
    turtle.select(mSlot)
    dig(DOWN)
    if checkStorage() then
      emptyStorage(DOWN)
    end
  end
  checkFuel()
  checkSlot(mat)
  turtle.select(mat)
  place(DOWN)
end

function place(dir)
  if dir == DOWN then
    det = turtle.placeDown()
  else 
    if dir == FRONT then
      det = turtle.place()
    else
      det = turtle.placeUp()
    end
	end
  return det
end

function detect(dir)
  if dir == DOWN then
    det = turtle.detectDown()
  else 
    if dir == FRONT then
      det = turtle.detect()
    else
      det = turtle.detectUp()
    end
  end
  return det
end

function dig(dir)
  if dir == DOWN then
    det = turtle.digDown()
  else 
    if dir == FRONT then
      det = turtle.dig()
    else
      det = turtle.digUp()
    end
  end
  return det
end

function suck(dir)
  if dir == DOWN then
    det = turtle.suckDown()
  else 
    if dir == FRONT then
      det = turtle.suck()
    else
      det = turtle.suckUp()
    end
  end
  return det
end

function drop(dir)
  if dir == DOWN then
    det = turtle.dropDown()
  else 
    if dir == FRONT then
      det = turtle.drop()
    else
      det = turtle.dropUp()
    end
  end
  return det
end

function move(dir)
  if dir == DOWN then
    det = turtle.down()
  else 
    if dir == FORWARD then
      det = turtle.forward()
    else
      det = turtle.up()
    end
  end
  return det
end

function unload()
  dir = openSpace()
  turtle.select(16)
  place(dir)
  for i = 1, 16 do
    turtle.select(i)
    drop(dir)
    sleep(1)
  end
  turtle.select(16)
  dir(dir)
end

function load()
  dir = openSpace()
  turtle.select(16)
  place(dir)
  slt = 2
  while slt < mSlot do
    turtle.select(slt)
    suck(dir)
    slt = slt + 2
  end
  turtle.select(16)
  dig(dir)
end

-- This is where the code starts running.
load()
go(FORWARD)
go(UP)
left = true
if multiTank == null then
  multiTank = 1
end

for height = 1, tankHeight do
  for width = 1, tankWidth do
    for tank = 1, multiTank do
      for length = 1, tankLength do
        if tank > 1 and length == 1 then
          length = 2
        end
        th = height == 1 or height == tankHeight
        tw = width == 1 or width == tankWidth
        tl = length == 1 or length == tankLength

        if th and tw then
          currentSlot = edgeSlot
        else if th and tl then
            currentSlot = edgeSlot
          else if tw and tl then
              currentSlot = edgeSlot
            else
              currentSlot = sideSlot
            end
          end
        end
        
        if height == 2 and width == (tankWidth - 1) and tank < multiTank then
          currentSlot = valveSlot
        end
        
        if th or tw or tl then  
          placeBlock(currentSlot)
        end

        if length < tankLength then
          go(FORWARD)
        end
      end
    end
    if width < tankWidth then
      if left then
        turtle.turnLeft()
        go(FORWARD)
        turtle.turnLeft()
      else
        turtle.turnRight()
        go(FORWARD)
        turtle.turnRight()
      end	
      left = not left
    else
      left = (tankWidth % 2) == 1
      if not left then
        left = (height % 2) == 0
      end
    end
  end

  go(UP)
  turtle.turnLeft()
  turtle.turnLeft()

end

unload()
